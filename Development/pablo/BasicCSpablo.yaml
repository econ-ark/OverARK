basic_CS_block:
    explain: consumption-saving block with simple unemployment shocks
    symbols:
        states: 
            kLvl:
                explain: current capital holdings level, equivalent to last period's end-of-period assets
                grid: vFunc_end.domain.grid
        controls: cLvl
        parameters: [DiscFac, CRRA, Rfree, UnempPrb]
        distributions: [TranShkDstn]
        functions: vFunc_beg
        end: vFunc_end

    definitions:
        aLvl: mLvl - cLvl
        u: cLvl^(1-CRRA) / (1-CRRA)
        uP: cLvl^(-CRRA)
        v: u + DiscFac * vFunc_end(aLvl)

    dynamics:
        - bLvl = Rfree * kLvl
        - yLvl ~ TranShkDstn
        - mLvl = bLvl + yLvl
        - cLvl @ (mLvl) := argmax v | aLvl >= 0.0

    functions:
        - vFunc_beg @ (kLvl) = E[ v ]
        - vFunc_beg.der @ (kLvl) = Rfree * E[ uP ]
        
    calibration:
        CRRA: 2.0
        Rfree: 1.03
        UnempPrb: 0.05
        TranShkDstn: !Discrete
            probs: [UnempPrb, 1. - UnempPrb]
            values: [0., 1. / (1-UnempPrb)]

    solution:
        method: EGM
        grids: aLvl: vFunc_end.domain.grid
        guess:
            vFunc_beg:
                !ConstantFunction:
                    value: 0.0
                    grid:
                        spacing: log
                        min: 0.0
                        max: 50.0
                        nodes: 96

time_loop:
    tick: True
    twist:
        kLvl: aLvl
        vFunc_beg: vFunc_end

basic_CS_model:
    content:
        - link(basic_CS_block, time_loop, basic_CS_block)

basic_consumer_type:
    model: basic_CS_model
    simulation:
        style: MC
        count: 10000
        periods: 100
        initial: kLvl: 0.0
